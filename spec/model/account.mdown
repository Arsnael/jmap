# Accounts

A single access token may provide access to multiple accounts, for example if another user is sharing their mail with the logged in user, or if there is an account that contains data for a group or business.

All data, other than the account objects themselves, belongs to a single account. With the exception of a few explicit operations to copy data between accounts, all methods take an *accountId* argument that specifies on which account the operations are to take place. This argument is always optional; if not specified, the primary account is used. All ids (other than Account ids of course) are only unique within their account.

In the event of a severe internal error, a server may have to reallocate ids or do something else that violates standard JMAP data constraints. In this situation, the data on the server is no longer compatible with cached data the client may have from before. The server MUST treat this as though the account has been deleted and then recreated with a new account id. Clients will then be forced to throw away any data with the old account id and refetch all data from scratch.

An **Account** object has the following properties:

- **id**: `String`
  The id of the account. This property is immutable.
- **name**: `String`
  A user-friendly string to show when presenting content from this account, e.g. the email address representing the owner of the account.
- **isPrimary**: `Boolean`
  This MUST be true for exactly one of the accounts returned. This is to be considered the user's main or default account by the client.
- **isReadOnly**: `Boolean`
  This is `true` if the entire account is read-only.
- **hasDataFor**: `String[]`
  A list of the data profiles available in this account. Each future JMAP data types specification will define a profile name to encompass that set of types.

## getAccounts

To fetch the complete list of accounts to which the user has access, make a call to `getAccounts`. It takes no arguments.

The response to *getAccounts* is called *accounts*. It has the following arguments:

- **list**: `Account[]`
  An array of all Account objects.

Example of a successful request:

    ["getAccounts", {}, "#0"]

and response:

    [ "accounts", {
      "list": [
        {
          "id": "6asf5",
          "name": "user@example.com",
          "isPrimary": true,
          "isReadOnly": false,
          "hasTypes": [ "mail" ]
      ]
    }, "#0" ]
