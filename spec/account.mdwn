## Accounts

A single access token may provide access to multiple accounts, for example if another user is sharing their mail with the logged in user, or if there is an account that contains data for a group or business.

All records, other than the account records themselves, belong to a single account. With the exception of a few explicit operations to copy data between accounts, all methods take an *accountId* argument that specifies on which account the operations are to take place. This argument is always optional; if not specified, the primary account is used. All ids (other than Account ids of course) are only unique within their account.

In the event of a severe internal error, a server may have to reallocate ids or do something else that violates standard JMAP data constraints. In this situation, the data on the server is no longer compatible with cached data the client may have from before. The server MUST treat this as though the account has been deleted and then recreated with a new account id. Clients will then be forced to throw away any data with the old account id and refetch all data from scratch.

An **Account** object has the following properties:

- **id**: `String`
  The id of the account. This property is immutable.
- **name**: `String`
  A user-friendly string to show when presenting content from this account, e.g. the email address of the account.
- **isPrimary**: `Boolean`
  This MUST be true for exactly one of the accounts returned.
- **capabilities**: `AccountCapabilities`
  An object describing general capabilities of this server.
- **mail**: `MailCapabilities|null`
  If `null`, this account does not support mail, and any use of the mail-related methods with this account will result in an `accountNoMail` error. Otherwise, it will be an object describing certain capabilities of the mail system.
- **contacts**: `ContactsCapabilities|null`
  If `null`, this account does not support contacts, and any use of the contacts-related methods with this account will result in an `accountNoContacts` error. Otherwise, it will be an object describing certain capabilities of the contacts system.
- **calendars**: `CalendarsCapabilities|null`
  If `null`, this account does not support calendars, and any use of the calendar-related methods with this account will result in an `accountNoCalendars` error. Otherwise, it will be an object describing certain capabilities of the calendars system.

An **AccountCapabilities** object has the following properties:

- **maxSizeUpload**: `Number`
  The maximum file size, in bytes, that the server will accept for a single file upload (for any purpose).

A **MailCapabilities** object has the following properties:

- **isReadOnly**: `Boolean`
  True if the user has read-only access to the mail in this account. The user may not use the `set`-type mail methods with this account.
- **maxSizeMessageAttachments**: `Number`
  The maximum total size of attachments, in bytes, allowed for messages. A server MAY still reject messages with a lower attachment size total (for example, if the body includes several megabytes of text, causing the size of the encoded MIME structure to be over some server-defined limit).
- **canDelaySend**: `Boolean`
  Does the server support inserting a message into the outbox to be sent later at a user-specified time?
- **messageListSortOptions**: `String[]`
  A list of all the message properties the server supports for sorting by. This MAY include properties the client does not recognise (for example custom properties specified in the vendor extension). Clients MUST ignore any unknown properties in the list.

A **ContactsCapabilities** object has the following properties:

- **isReadOnly**: `Boolean`
  True if the user has read-only access to the contacts in this account. The user may not use the `set`-type contacts methods with this account.

A **CalendarsCapabilities** object has the following properties:

- **isReadOnly**: `Boolean`
  True if the user has read-only access to the calendars in this account. The user may not use the `set`-type calendar methods with this account.

The AccountCapabilities, MailCapabilities, ContactsCapabilities and CalendarsCapabilities objects MAY also contain one or more properties prefixed with "vnd-" + a name that uniquely identifies the vendor, e.g. `"vnd-com.fastmail"`. The value type for these properties is undefined. These properties allow vendors to be able to inform their own clients of custom capabilities. Unknown properties of this form MUST be ignored by clients.

### getAccounts

To fetch the complete list of accounts to which the user has access, make a call to `getAccounts`. It takes no arguments.

The response to *getAccounts* is called *accounts*. It has the following arguments:

- **list**: `Account[]`
  An array of all Account objects.

Example of a successful request:

    ["getAccounts", {}, "#0"]

and response:

    [ "accounts", {
      "list": [
        {
          "id": "6asf5",
          "name": "user@example.com",
          "isPrimary": true,
          "capabilities": {
            maxSizeUpload: 1000000000
          },
          "mail": {
            "isReadOnly": false,
            "maxSizeMessageAttachments": 50000000,
            "canDelaySend": true,
            "messageListSortOptions": [
              "id", "date", "subject", "from", "to",
              "isUnread", "isPinned", "threadUnread", "threadPinned"
            ],
          },
          "contacts": {
            "isReadOnly": false
          },
          "calendars": {
            "isReadOnly": false
          }
        },
        {
          "id": "e12e1a",
          "name": "shared.user@example.com",
          "isPrimary": false,
          "capabilities": {
            maxSizeUpload: 0
          },
          "mail": null,
          "contacts": null,
          "calendars": {
            "isReadOnly": true
          }
        }
      ]
    }, "#0" ]
